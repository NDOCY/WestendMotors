@model WestendMotors.Models.User
@{
    ViewBag.Title = "Details";
    var role = Session["Role"] as string;
    if (role == "Admin")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout_User.cshtml";
    }
}

<div class="container-fluid mt-4">
    <!-- Header Section -->
    <div class="page-header mb-4">
        <div class="d-flex align-items-center">
            <div class="header-icon">
                <i class="fas fa-user"></i>
            </div>
            <div>
                <h2 class="mb-1">User Details</h2>
                <p class="text-muted mb-0">View and manage user information and vehicle assignments</p>
            </div>
        </div>
    </div>

    <!-- User Information Card -->
    <div class="info-card mb-4">
        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-id-card me-2"></i>
                @Model.FullName
            </h5>
        </div>
        <div class="card-body">
            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">@Html.DisplayNameFor(model => model.FullName)</div>
                    <div class="info-value">@Html.DisplayFor(model => model.FullName)</div>
                </div>
                <div class="info-item">
                    <div class="info-label">@Html.DisplayNameFor(model => model.Email)</div>
                    <div class="info-value">@Html.DisplayFor(model => model.Email)</div>
                </div>
                <div class="info-item">
                    <div class="info-label">@Html.DisplayNameFor(model => model.Role)</div>
                    <div class="info-value">
                        <span class="role-badge @(Model.Role == "Admin" ? "role-admin" :
                                     Model.Role == "Sales" ? "role-sales" :
                                     "role-customer")">
                            @Html.DisplayFor(model => model.Role)
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Assigned Vehicles Section -->
    <div class="vehicles-card mb-4">
        <div class="card-header">
            <h5 class="card-title">
                <i class="fas fa-car me-2"></i>
                Assigned Vehicles
            </h5>
        </div>
        <div class="card-body">
            @if (Model.UserVehicles != null && Model.UserVehicles.Any())
            {
                <div class="table-container">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>Vehicle</th>
                                <th>Purchase Date</th>
                                <th>Next Service</th>
                                <th>Service Recurrence</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var assignment in Model.UserVehicles)
                            {
                                // Get the first/latest service schedule
                                var firstServiceSchedule = assignment.ServiceSchedules?.OrderBy(s => s.NextServiceDate).FirstOrDefault();
                                <tr>
                                    <td class="font-medium">@(assignment.Vehicle?.Title ?? "N/A")</td>
                                    <td>@assignment.PurchaseDate.ToString("d")</td>
                                    <td>
                                        @if (firstServiceSchedule != null)
                                        {
                                            @firstServiceSchedule.NextServiceDate.ToString("d")
                                        }
                                        else
                                        {
                                            <span class="text-muted">No schedule</span>
                                        }
                                    </td>
                                    <td>
                                        @if (firstServiceSchedule != null)
                                        {
                                            @firstServiceSchedule.RecurrenceType
                                        }
                                        else
                                        {
                                            <span class="text-muted">N/A</span>
                                        }
                                    </td>
                                    <td>
                                        <span class="status-badge @(assignment.Vehicle?.IsAvailable == true ? "status-available" : "status-assigned")">
                                            @(assignment.Vehicle?.IsAvailable == true ? "Available" : "Assigned")
                                        </span>
                                    </td>
                                    <td>
                                        <div class="action-buttons">
                                            @Html.ActionLink("Service History", "VehicleServiceHistory", "ServiceRecords",
                                                new { vehicleId = assignment.VehicleId }, new { @class = "btn-action btn-info", title = "View Service History" })
                                            @if (firstServiceSchedule == null)
                                            {
                                                @Html.ActionLink("Add Service", "SetServiceSchedule", "UserVehicles",
                                                    new { userVehicleId = assignment.Id }, new { @class = "btn-action btn-success", title = "Add Service Schedule" })
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="fas fa-car"></i>
                    </div>
                    <h6>No Vehicles Assigned</h6>
                    <p class="text-muted">This user has no vehicles assigned yet.</p>
                </div>
            }
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="action-bar">
        @if (role == "Admin")
        {
            @Html.ActionLink("Edit", "Edit", new { id = Model.UserId }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Assign Vehicle", "AssignVehicle", new { userId = Model.UserId }, new { @class = "btn btn-success" })
        }
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
        </div>
</div>

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Matching Dashboard Theme - Clean Automotive Design */
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #17a2b8;
            --light-bg: #f8f9fa;
            --card-bg: #ffffff;
            --text-dark: #2c3e50;
            --text-muted: #7f8c8d;
            --border-color: #e1e8ed;
            --shadow: 0 2px 10px rgba(0,0,0,0.08);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.12);
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: var(--text-dark);
        }

        /* Header Styling */
        .page-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
        }

        .header-icon {
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1.5rem;
            font-size: 1.5rem;
        }

        /* Card Styling */
        .info-card, .vehicles-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
            animation: fadeInUp 0.6s ease-out;
        }

        .card-header {
            background: #f8f9fa;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .card-title {
            margin: 0;
            font-weight: 600;
            color: var(--text-dark);
            display: flex;
            align-items: center;
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Info Grid */
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
        }

        .info-item {
            display: flex;
            flex-direction: column;
        }

        .info-label {
            font-size: 0.875rem;
            font-weight: 600;
            color: var(--text-muted);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.5rem;
        }

        .info-value {
            font-size: 1rem;
            color: var(--text-dark);
            font-weight: 500;
        }

        /* Table Styling */
        .table-container {
            overflow-x: auto;
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .data-table {
            width: 100%;
            margin: 0;
            border-collapse: collapse;
        }

        .data-table th {
            background: #f8f9fa;
            border: none;
            padding: 1rem 1.5rem;
            font-weight: 600;
            color: var(--text-dark);
            font-size: 0.875rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            border-bottom: 2px solid var(--border-color);
        }

        .data-table td {
            padding: 1rem 1.5rem;
            border: none;
            border-bottom: 1px solid #f1f1f1;
            vertical-align: middle;
        }

        .data-table tbody tr {
            transition: background-color 0.2s ease;
        }

        .data-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        .font-medium {
            font-weight: 600;
        }

        /* Status and Role Badges */
        .status-badge, .role-badge {
            padding: 0.35rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            display: inline-block;
        }

        .status-available {
            background: #d4edda;
            color: #155724;
        }

        .status-assigned {
            background: #cce5ff;
            color: #004085;
        }

        .role-admin {
            background: #d1ecf1;
            color: #0c5460;
        }

        .role-sales {
            background: #cce5ff;
            color: #004085;
        }

        .role-customer {
            background: #d1f2eb;
            color: #00695c;
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
            align-items: center;
        }

        .btn-action {
            display: inline-flex;
            align-items: center;
            justify-content: center;
            width: 32px;
            height: 32px;
            border-radius: 6px;
            color: white;
            text-decoration: none;
            transition: all 0.2s ease;
            font-size: 0.875rem;
        }

        .btn-action.btn-info {
            background: var(--info-color);
        }

        .btn-action.btn-info:hover {
            background: #138496;
            transform: scale(1.1);
        }

        .btn-action.btn-success {
            background: var(--success-color);
        }

        .btn-action.btn-success:hover {
            background: #1e7e34;
            transform: scale(1.1);
        }

        .btn-action:hover {
            color: white;
            text-decoration: none;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 3rem 2rem;
            color: var(--text-muted);
        }

        .empty-icon {
            background: #f8f9fa;
            border-radius: 50%;
            width: 80px;
            height: 80px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
            font-size: 2rem;
            color: var(--text-muted);
        }

        .empty-state h6 {
            margin-bottom: 0.5rem;
            color: var(--text-dark);
        }

        /* Action Bar */
        .action-bar {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        /* Button Styling */
        .btn {
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background: var(--accent-color);
            color: white;
        }

        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background: #219a52;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-secondary {
            background: var(--secondary-color);
            color: white;
        }

        .btn-secondary:hover {
            background: #2c3e50;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        /* Focus styles for accessibility */
        .btn:focus, .btn-action:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .page-header {
                padding: 1.5rem;
                text-align: center;
            }

            .header-icon {
                margin: 0 auto 1rem auto;
            }

            .info-grid {
                grid-template-columns: 1fr;
                gap: 1rem;
            }

            .card-body {
                padding: 1rem;
            }

            .data-table {
                font-size: 0.875rem;
            }

            .data-table th,
            .data-table td {
                padding: 0.75rem 1rem;
            }

            .action-bar {
                flex-direction: column;
                align-items: stretch;
            }

            .btn {
                width: 100%;
            }

            .action-buttons {
                justify-content: center;
            }
        }

        @@media (max-width: 576px) {
            .container-fluid {
                padding: 1rem;
            }

            .empty-state {
                padding: 2rem 1rem;
            }

            .empty-icon {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }
        }

        /* Animation */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Utilities */
        .me-2 {
            margin-right: 0.5rem;
        }

        .mb-1 {
            margin-bottom: 0.25rem;
        }

        .mb-0 {
            margin-bottom: 0;
        }

        .text-muted {
            color: var(--text-muted) !important;
        }

        .d-flex {
            display: flex;
        }

        .align-items-center {
            align-items: center;
        }
    </style>
}