@model WestendMotors.Models.User

@{
    ViewBag.Title = "Edit User";
    var role = Session["Role"] as string;

    if (role == "Admin")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout_User.cshtml";
    }
}

<div class="container-fluid mt-4">
    <div class="page-header mb-4">
        <div class="d-flex align-items-center">
            <div class="header-icon">
                <i class="fas fa-user-edit"></i>
            </div>
            <div>
                <h2 class="mb-1">Edit User</h2>
                <p class="text-muted mb-0">Update user information and permissions</p>
            </div>
        </div>
    </div>

    <div class="form-card">
        <div class="form-card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.UserId)

                <div class="row">
                    <!-- Basic Information -->
                    <div class="col-md-6">
                        <div class="section-header mb-4">
                            <i class="fas fa-user me-2"></i>
                            <h5 class="section-title">Basic Information</h5>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <i class="fas fa-user input-icon"></i>
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger validation-message" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <i class="fas fa-envelope input-icon"></i>
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", type = "email" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger validation-message" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.PasswordHash, "New Password", htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <i class="fas fa-lock input-icon"></i>
                                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter new password (leave blank to keep current)", type = "password" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger validation-message" })
                            <small class="form-help">Leave password field blank to keep the current password unchanged.</small>
                        </div>
                    </div>

                    <!-- Role & Status -->
                    <div class="col-md-6">
                        <div class="section-header mb-4">
                            <i class="fas fa-shield-alt me-2"></i>
                            <h5 class="section-title">Role & Permissions</h5>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "form-label" })
                            <div class="input-group">
                                <i class="fas fa-user-tag input-icon"></i>
                                @Html.DropDownListFor(model => model.Role,
                                    new SelectList(new[]
                                    {
                                        new SelectListItem { Text = "Customer", Value = "Customer" },
                                        new SelectListItem { Text = "Admin", Value = "Admin" },
                                        new SelectListItem { Text = "Sales", Value = "Sales" },
                                        new SelectListItem { Text = "Service", Value = "Service" }
                                    }, "Value", "Text", Model.Role),
                                    new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger validation-message" })
                        </div>

                        <div class="form-group mb-3">
                            <label class="form-label">Account Status</label>
                            <div class="status-toggle">
                                @Html.CheckBoxFor(model => model.IsActive, new { @class = "status-checkbox", id = "statusToggle" })
                                <label for="statusToggle" class="status-label">
                                    <span class="status-indicator"></span>
                                    <span class="status-text">@(Model.IsActive ? "Active" : "Inactive")</span>
                                </label>
                            </div>
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger validation-message" })
                        </div>
                    </div>
                </div>

                <!-- Staff Information Section -->
                <div id="staffFields" class="staff-section" style="@(Model.Role != "Customer" ? "display:block;" : "display:none;")">
                    <div class="section-divider"></div>

                    <div class="section-header mb-4">
                        <i class="fas fa-briefcase me-2"></i>
                        <h5 class="section-title">Staff Information</h5>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <i class="fas fa-phone input-icon"></i>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "+1 234-567-8900" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger validation-message" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-label" })
                                <div class="input-group">
                                    <i class="fas fa-id-card input-icon"></i>
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g., Sales Manager, Service Advisor" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger validation-message" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "form-label" })
                        <div class="input-group">
                            <i class="fas fa-building input-icon"></i>
                            @Html.DropDownListFor(model => model.Department,
                                new SelectList(new[]
                                {
                                    new SelectListItem { Text = "Sales", Value = "Sales" },
                                    new SelectListItem { Text = "Service", Value = "Service" },
                                    new SelectListItem { Text = "Administration", Value = "Administration" },
                                    new SelectListItem { Text = "Management", Value = "Management" }
                                }, "Value", "Text", Model.Department),
                                "-- Select Department --",
                                new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger validation-message" })
                    </div>
                </div>

                <div class="form-actions">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save me-2"></i>Save Changes
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-2"></i>Back to List
                    </a>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            // Show/hide staff fields based on role selection
            $('#Role').change(function () {
                var role = $(this).val();
                var staffFields = $('#staffFields');

                if (role === 'Customer') {
                    staffFields.slideUp(300);
                } else {
                    staffFields.slideDown(300);
                }
            });

            // Initialize the visibility on page load
            $('#Role').trigger('change');

            // Update status text
            $('#statusToggle').change(function () {
                var statusText = $(this).is(':checked') ? 'Active' : 'Inactive';
                $('.status-text').text(statusText);
            });

            // Password field placeholder behavior
            $('#PasswordHash').focus(function () {
                if ($(this).val() === '') {
                    $(this).attr('placeholder', '');
                }
            }).blur(function () {
                if ($(this).val() === '') {
                    $(this).attr('placeholder', 'Enter new password (leave blank to keep current)');
                }
            });

            // Form validation
            $('form').on('submit', function () {
                // Clear any previous validation messages
                $('.validation-message').empty();

                // Basic validation
                var isValid = true;
                var role = $('#Role').val();

                // If role is not Customer, require staff fields
                if (role !== 'Customer') {
                    if ($('#Title').val().trim() === '') {
                        $('#Title').closest('.form-group').find('.validation-message').text('Title is required for staff members.');
                        isValid = false;
                    }
                    if ($('#Department').val() === '' || $('#Department').val() == null) {
                        $('#Department').closest('.form-group').find('.validation-message').text('Department is required for staff members.');
                        isValid = false;
                    }
                }

                return isValid;
            });
        });
    </script>
}

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Matching Dashboard Theme - Clean Automotive Design */
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --light-bg: #f8f9fa;
            --card-bg: #ffffff;
            --text-dark: #2c3e50;
            --text-muted: #7f8c8d;
            --border-color: #e1e8ed;
            --shadow: 0 2px 10px rgba(0,0,0,0.08);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.12);
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: var(--text-dark);
        }

        /* Header Styling */
        .page-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            animation: fadeInUp 0.6s ease-out;
        }

        .header-icon {
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1.5rem;
            font-size: 1.5rem;
        }

        /* Form Card */
        .form-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
            animation: fadeInUp 0.6s ease-out 0.1s both;
        }

        .form-card-body {
            padding: 2rem;
        }

        /* Section Headers */
        .section-header {
            display: flex;
            align-items: center;
            border-bottom: 2px solid #f1f3f4;
            padding-bottom: 0.75rem;
        }

        .section-title {
            margin: 0;
            font-weight: 600;
            color: var(--text-dark);
        }

        .section-divider {
            height: 1px;
            background: linear-gradient(90deg, var(--border-color), transparent);
            margin: 2rem 0;
        }

        /* Form Styling */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 0.75rem;
            color: var(--text-dark);
            font-size: 0.9rem;
            display: block;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Input Group Styling */
        .input-group {
            position: relative;
        }

        .input-icon {
            position: absolute;
            left: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-muted);
            z-index: 5;
            font-size: 0.9rem;
        }

        .form-control {
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.875rem 1rem;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            width: 100%;
            background: white;
            padding-left: 2.75rem;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .form-control:hover {
            border-color: #c1c9d0;
        }

        /* Select Styling */
        select.form-control {
            appearance: none;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 12px center;
            background-repeat: no-repeat;
            background-size: 16px;
            padding-right: 3rem;
        }

        /* Status Toggle */
        .status-toggle {
            display: flex;
            align-items: center;
            background: #f8f9fa;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
        }

        .status-toggle:hover {
            border-color: #c1c9d0;
        }

        .status-checkbox {
            display: none;
        }

        .status-label {
            display: flex;
            align-items: center;
            cursor: pointer;
            margin: 0;
            font-weight: 500;
        }

        .status-indicator {
            width: 20px;
            height: 20px;
            border-radius: 10px;
            background: var(--danger-color);
            margin-right: 0.75rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .status-indicator::after {
            content: '';
            width: 8px;
            height: 8px;
            background: white;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 6px;
            transform: translateY(-50%);
            transition: all 0.3s ease;
        }

        .status-checkbox:checked + .status-label .status-indicator {
            background: var(--success-color);
        }

        .status-checkbox:checked + .status-label .status-indicator::after {
            left: 6px;
        }

        /* Staff Section */
        .staff-section {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 8px;
            border-left: 4px solid var(--accent-color);
            margin-top: 2rem;
        }

        /* Form Help Text */
        .form-help {
            color: var(--text-muted);
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: block;
        }

        /* Validation Messages */
        .validation-message {
            font-size: 0.875rem;
            margin-top: 0.5rem;
            display: block;
        }

        /* Button Styling */
        .btn {
            font-weight: 600;
            padding: 0.875rem 1.5rem;
            border-radius: 8px;
            transition: all 0.3s ease;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background: var(--accent-color);
            color: white;
        }

        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-secondary {
            background: var(--secondary-color);
            color: white;
        }

        .btn-secondary:hover {
            background: #2c3e50;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        /* Form Actions */
        .form-actions {
            border-top: 1px solid var(--border-color);
            padding-top: 2rem;
            margin-top: 2rem;
            display: flex;
            gap: 1rem;
            align-items: center;
        }

        /* Focus styles for accessibility */
        .btn:focus, .form-control:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .container-fluid {
                padding: 1rem;
            }

            .page-header {
                padding: 1.5rem;
                text-align: center;
            }

            .page-header .d-flex {
                flex-direction: column;
                gap: 1rem;
            }

            .header-icon {
                margin: 0 auto 1rem auto;
            }

            .form-card-body {
                padding: 1.5rem;
            }

            .staff-section {
                padding: 1rem;
            }

            .form-actions {
                flex-direction: column;
                align-items: stretch;
            }

            .form-actions .btn {
                width: 100%;
            }
        }

        @@media (max-width: 576px) {
            .form-card-body {
                padding: 1rem;
            }

            .section-header {
                flex-direction: column;
                align-items: flex-start;
                text-align: center;
            }

            .section-header i {
                margin-bottom: 0.5rem;
            }
        }

        /* Animation */
        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Utilities */
        .me-2 {
            margin-right: 0.5rem;
        }

        .mb-1 {
            margin-bottom: 0.25rem;
        }

        .mb-0 {
            margin-bottom: 0;
        }

        .text-muted {
            color: var(--text-muted) !important;
        }

        .d-flex {
            display: flex;
        }

        .align-items-center {
            align-items: center;
        }
    </style>
}