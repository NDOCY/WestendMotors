@model WestendMotors.Models.TradeInRequest

@{
    ViewBag.Title = "Trade-In Review - " + Model.Make + " " + Model.Model;
    var role = Session["Role"] as string;

    if (role == "Admin")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout_User.cshtml";
    }
}

<div class="container mt-4">
    <!-- Page Header -->
    <div class="page-header mb-4">
        <div class="d-flex align-items-center justify-content-between">
            <div class="d-flex align-items-center">
                <div class="header-icon">
                    <i class="fas fa-clipboard-check"></i>
                </div>
                <div>
                    <h1 class="mb-1">Trade-In Review</h1>
                    <p class="text-muted mb-0">Detailed review of trade-in request for @Model.Make @Model.Model (@Model.Year)</p>
                </div>
            </div>
            <div class="status-display">
                <span class="status-label">Current Status</span>
                <span class="status-badge status-@Model.Status.ToLower().Replace(" ", "-")">
                    @Model.Status
                </span>
            </div>
        </div>
    </div>

    <!-- Vehicle Comparison Section -->
    <div class="row mb-4">
        <!-- Customer Vehicle Details -->
        <div class="col-lg-6 mb-4">
            <div class="vehicle-card customer-vehicle">
                <div class="vehicle-header">
                    <div class="header-content">
                        <i class="fas fa-user-car"></i>
                        <div>
                            <h5>Customer Vehicle</h5>
                            <h3>@Model.Make @Model.Model (@Model.Year)</h3>
                        </div>
                    </div>
                    <div class="estimated-value">
                        <span class="value-label">Estimated Value</span>
                        @if (Model.EstimatedValue.HasValue)
                        {
                            <span class="value-amount">
                                @Model.EstimatedValue.Value.ToString("C")
                            </span>
                        }

                    </div>
                </div>

                <div class="vehicle-body">
                    <!-- Vehicle Specs -->
                    <div class="specs-grid">
                        <div class="spec-item">
                            <i class="fas fa-tachometer-alt"></i>
                            <div>
                                <span class="spec-label">Mileage</span>
                                <span class="spec-value">@Model.Mileage.ToString("N0") km</span>
                            </div>
                        </div>
                        <div class="spec-item">
                            <i class="fas fa-gas-pump"></i>
                            <div>
                                <span class="spec-label">Fuel Type</span>
                                <span class="spec-value">@Model.FuelType</span>
                            </div>
                        </div>
                        <div class="spec-item">
                            <i class="fas fa-cogs"></i>
                            <div>
                                <span class="spec-label">Transmission</span>
                                <span class="spec-value">@Model.Transmission</span>
                            </div>
                        </div>
                        <div class="spec-item">
                            <i class="fas fa-palette"></i>
                            <div>
                                <span class="spec-label">Color</span>
                                <span class="spec-value">@Model.Color</span>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.ConditionNotes))
                    {
                        <div class="condition-notes">
                            <h6><i class="fas fa-sticky-note me-2"></i>Condition Notes</h6>
                            <p>@Model.ConditionNotes</p>
                        </div>
                    }

                    <!-- Customer Images -->
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        <div class="vehicle-images">
                            <h6><i class="fas fa-camera me-2"></i>Customer Images</h6>
                            <div class="image-grid">
                                @foreach (var image in Model.Images)
                                {
                                    <div class="image-item">
                                        <img src="@image.ImagePath" class="vehicle-image" alt="Customer vehicle" onclick="openImageModal('@image.ImagePath')" />
                                        <div class="image-overlay">
                                            <a href="@image.ImagePath" target="_blank" class="btn btn-light btn-sm">
                                                <i class="fas fa-external-link-alt"></i>
                                            </a>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Target Vehicle Details -->
        <!-- Target Vehicle Details -->
        @if (Model.TargetVehicle != null)
        {
            <div class="col-lg-6 mb-4">
                <div class="vehicle-card target-vehicle">
                    <div class="vehicle-header">
                        <div class="header-content">
                            <i class="fas fa-car"></i>
                            <div>
                                <h5>Target Vehicle</h5>
                                <h3>@Model.TargetVehicle.Title</h3>
                            </div>
                        </div>
                        <div class="target-price">
                            <span class="price-label">Price</span>
                            <span class="price-amount">@Model.TargetVehicle.Price.ToString("C")</span>
                        </div>
                    </div>

                    <div class="vehicle-body">
                        <!-- Target Vehicle Specs -->
                        @if (Model.TargetVehicle.Specs != null)
                        {
                            <div class="specs-grid">
                                <div class="spec-item">
                                    <i class="fas fa-calendar"></i>
                                    <div>
                                        <span class="spec-label">Year</span>
                                        <span class="spec-value">@Model.TargetVehicle.Specs.Year</span>
                                    </div>
                                </div>
                                <div class="spec-item">
                                    <i class="fas fa-tachometer-alt"></i>
                                    <div>
                                        <span class="spec-label">Mileage</span>
                                        <span class="spec-value">@Model.TargetVehicle.Specs.Mileage.ToString("N0") km</span>
                                    </div>
                                </div>
                                <div class="spec-item">
                                    <i class="fas fa-gas-pump"></i>
                                    <div>
                                        <span class="spec-label">Fuel</span>
                                        <span class="spec-value">@Model.TargetVehicle.Specs.FuelType</span>
                                    </div>
                                </div>
                                <div class="spec-item">
                                    <i class="fas fa-cogs"></i>
                                    <div>
                                        <span class="spec-label">Transmission</span>
                                        <span class="spec-value">@Model.TargetVehicle.Specs.Transmission</span>
                                    </div>
                                </div>
                                <div class="spec-item">
                                    <i class="fas fa-palette"></i>
                                    <div>
                                        <span class="spec-label">Color</span>
                                        <span class="spec-value">@Model.TargetVehicle.Specs.Color</span>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                Vehicle specifications not available.
                            </div>
                        }

                        <!-- Target Vehicle Images -->
                        <!-- Target Vehicle Images -->
                        @if (Model.TargetVehicle.Images != null && Model.TargetVehicle.Images.Any())
                        {
                            <div class="vehicle-images">
                                <h6><i class="fas fa-camera me-2"></i>Vehicle Images</h6>
                                <div class="image-grid">
                                    @foreach (var image in Model.TargetVehicle.Images.Take(6))
                                    {
                                        <div class="image-item">
                                            <img src="@image.ImagePath" class="vehicle-image" alt="Target vehicle" onclick="openImageModal('@image.ImagePath')" />
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="col-lg-6 mb-4">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Target vehicle information not available.
                </div>
            </div>
        }
    </div>

    <!-- Customer Information Card -->
    @if (Model.Customer != null)
    {
        <div class="info-card customer-info mb-4">
            <div class="info-header">
                <h5><i class="fas fa-user me-2"></i>Customer Information</h5>
            </div>
            <div class="info-body">
                <div class="row">
                    <div class="col-md-4">
                        <div class="info-item">
                            <i class="fas fa-user"></i>
                            <div>
                                <span class="info-label">Full Name</span>
                                <span class="info-value">@Model.Customer.FullName</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="info-item">
                            <i class="fas fa-envelope"></i>
                            <div>
                                <span class="info-label">Email</span>
                                <span class="info-value">@Model.Customer.Email</span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="info-item">
                            <i class="fas fa-calendar-plus"></i>
                            <div>
                                <span class="info-label">Request Date</span>
                                <span class="info-value">@Model.RequestDate.ToString("MMM dd, yyyy")</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-warning">
            <i class="fas fa-exclamation-triangle me-2"></i>
            Customer information not available.
        </div>
    }

    @if (role == "Admin")
    {
        <!-- Admin Actions Card -->
        <div class="admin-actions-card mb-4">
            <div class="admin-header">
                <h5><i class="fas fa-tools me-2"></i>Admin Actions</h5>
            </div>
            <div class="admin-body">
                <!-- Status Update Form -->
                <div class="action-section">
                    <h6><i class="fas fa-edit me-2"></i>Update Status & Offer</h6>
                    @using (Html.BeginForm("UpdateStatus", "TradeInRequests", FormMethod.Post, new { @class = "status-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id", Model.TradeInRequestId)

                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-flag me-2"></i>Update Status
                                    </label>
                                    <select name="status" class="form-control" onchange="toggleFinalOffer(this.value)">
                                        <option value="Pending">Pending</option>
                                        <option value="Under Review">Under Review</option>
                                        <option value="Approved">Approved</option>
                                        <option value="Declined">Declined</option>
                                        <option value="Scheduled">Scheduled</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group" id="finalOfferGroup" style="display: none;">
                                    <label class="form-label">
                                        <i class="fas fa-money-bill-wave me-2"></i>Final Offer (R)
                                    </label>
                                    <input type="number" name="finalOffer" class="form-control" step="0.01"
                                           value="@Model.FinalOffer" placeholder="Enter final offer" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-comment me-2"></i>Admin Notes
                                    </label>
                                    <textarea name="adminNotes" class="form-control" rows="2" placeholder="Internal notes about this trade-in...">@Model.AdminNotes</textarea>
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Update Status
                            </button>
                        </div>
                    }
                </div>

                <div class="divider"></div>

                <!-- Schedule Appointment Form -->
                <div class="action-section">
                    <h6><i class="fas fa-calendar-plus me-2"></i>Schedule In-Person Review</h6>
                    @using (Html.BeginForm("ScheduleAppointment", "TradeInRequests", FormMethod.Post, new { @class = "appointment-form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("tradeInId", Model.TradeInRequestId)

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-clock me-2"></i>Appointment Date & Time
                                    </label>
                                    <input type="datetime-local" name="appointmentDate" class="form-control"
                                           min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-sticky-note me-2"></i>Appointment Notes
                                    </label>
                                    <textarea name="notes" class="form-control" rows="2"
                                              placeholder="Meeting location, what to bring, inspection details, etc."></textarea>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label class="form-label">&nbsp;</label>
                                    <button type="submit" class="btn btn-success w-100">
                                        <i class="fas fa-calendar-check me-2"></i>Schedule
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Admin Assignment Section -->
                <div class="divider"></div>

                <div class="action-section">
                    <h6><i class="fas fa-user-shield me-2"></i>Assign Admin to Appointment & Trade-In</h6>

                    @using (Html.BeginForm("AssignAdminToAppointment", "TradeInRequests", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("tradeInId", Model.TradeInRequestId)

                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-user-cog me-2"></i>Select Admin User
                                    </label>
                                    <select name="adminId" class="form-control" required>
                                        <option value="">-- Select Admin User --</option>
                                        @{
                                            var adminUsers = ViewBag.AdminUsers as SelectList;
                                            if (adminUsers != null)
                                            {
                                                foreach (var item in adminUsers)
                                                {
                                                    <option value="@item.Value" selected="@(item.Selected ? "selected" : null)">
                                                        @item.Text
                                                    </option>
                                                }
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="form-label">
                                        <i class="fas fa-calendar me-2"></i>Select Appointment to Assign
                                    </label>
                                    <select name="appointmentId" class="form-control" required>
                                        <option value="">-- Select Appointment --</option>
                                        @if (Model.Appointments != null && Model.Appointments.Any())
                                        {
                                            foreach (var appt in Model.Appointments.Where(a => a.Status == "Scheduled"))
                                            {
                                                <option value="@appt.Id">
                                                    @appt.AppointmentDate.ToString("MMM dd, yyyy HH:mm")
                                                </option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="form-actions">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-user-plus me-2"></i>Assign Admin
                            </button>
                        </div>
                    }

                    <!-- Current Admin Assignment Display -->
                    @if (Model.AssignedStaff != null)
                    {
                        <div class="current-assignment mt-3 p-3 bg-light rounded">
                            <h6><i class="fas fa-info-circle me-2"></i>Currently Assigned Admin</h6>
                            <div class="d-flex align-items-center">
                                <div class="assignment-icon me-3">
                                    <i class="fas fa-user-shield fa-2x text-primary"></i>
                                </div>
                                <div>
                                    <strong>@Model.AssignedStaff.FullName</strong>
                                    <span class="badge bg-success ms-2">@Model.AssignedStaff.Role</span>
                                    <br>
                                    <small class="text-muted">
                                        Assigned on: @Model.AssignedDate?.ToString("MMM dd, yyyy")
                                        @{
                                            var contactInfo = new List<string>();
                                            if (!string.IsNullOrEmpty(Model.AssignedStaff.Email))
                                            {
                                                contactInfo.Add($"Email: {Model.AssignedStaff.Email}");
                                            }
                                            if (!string.IsNullOrEmpty(Model.AssignedStaff.Phone))
                                            {
                                                contactInfo.Add($"Phone: {Model.AssignedStaff.Phone}");
                                            }
                                        }
                                        @foreach (var info in contactInfo)
                                        {
                                            <br />@info
                                        }
                                    </small>
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Appointment Admin Assignments -->
                    @if (Model.Appointments != null && Model.Appointments.Any(a => a.AssignedStaff != null))
                    {
                        <div class="appointment-assignments mt-3">
                            <h6><i class="fas fa-calendar-check me-2"></i>Appointment Admin Assignments</h6>
                            @foreach (var appt in Model.Appointments.Where(a => a.AssignedStaff != null).OrderBy(a => a.AppointmentDate))
                            {
                                <div class="appointment-assignment-item p-3 border rounded mb-2">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <strong>Appointment:</strong> @appt.AppointmentDate.ToString("MMM dd, yyyy HH:mm")<br>
                                            <strong>Admin:</strong> @appt.AssignedStaff.FullName
                                            <span class="badge bg-info">@appt.AssignedStaff.Role</span>
                                        </div>
                                        <div class="col-md-6 text-end">
                                            <small class="text-muted">
                                                Assigned: @appt.AssignedDate?.ToString("MMM dd, yyyy")<br>
                                                Status: <span class="status-badge status-@appt.Status.ToLower()">@appt.Status</span>
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                </div>

                <!-- Existing Appointments -->
                @if (Model.Appointments != null && Model.Appointments.Any())
                {
                    <div class="divider"></div>

                    <div class="appointments-section">
                        <h6><i class="fas fa-calendar me-2"></i>Scheduled Appointments</h6>
                        <div class="appointments-list">
                            @foreach (var appt in Model.Appointments.OrderByDescending(a => a.AppointmentDate))
                            {
                                <div class="appointment-item">
                                    <div class="appointment-info">
                                        <div class="appointment-date">
                                            <i class="fas fa-calendar-alt"></i>
                                            <span>@appt.AppointmentDate.ToString("MMM dd, yyyy")</span>
                                        </div>
                                        <div class="appointment-time">
                                            <i class="fas fa-clock"></i>
                                            <span>@appt.AppointmentDate.ToString("HH:mm")</span>
                                        </div>
                                        <div class="appointment-status">
                                            <span class="status-badge status-@appt.Status.ToLower().Replace(" ", "-")">@appt.Status</span>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(appt.Notes))
                                    {
                                        <div class="appointment-notes">
                                            <i class="fas fa-sticky-note"></i>
                                            <span>@appt.Notes</span>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Navigation Actions -->
    <div class="navigation-actions">
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-2"></i>Back to List
        </a>

        @if (Model.Customer != null)
        {
            <a href="@Url.Action("Details", "Users", new { id = Model.Customer.UserId })" class="btn btn-info">
                <i class="fas fa-user me-2"></i>View Customer Profile
            </a>
        }

        @if (role == "Admin" && Model.TargetVehicle != null)
        {
            <a href="@Url.Action("Details", "Vehicles", new { id = Model.TargetVehicle.Id })" class="btn btn-success">
                <i class="fas fa-car me-2"></i>View Target Vehicle
            </a>
        }
    </div>
</div>

<!-- Image Modal -->
<div class="image-modal" id="imageModal" onclick="closeImageModal()">
    <div class="modal-content">
        <span class="modal-close" onclick="closeImageModal()">&times;</span>
        <img id="modalImage" src="" alt="Full size image" />
    </div>
</div>

@section Scripts {
    <script>
        function toggleFinalOffer(status) {
            const offerGroup = document.getElementById('finalOfferGroup');
            offerGroup.style.display = (status === 'Approved') ? 'block' : 'none';
        }

        // Initialize based on current status
        document.addEventListener('DOMContentLoaded', function() {
            toggleFinalOffer('@Model.Status');
            const statusSelect = document.querySelector('select[name="status"]');
            if (statusSelect) {
                statusSelect.value = '@Model.Status';
            }
        });

        // Image modal functions
        function openImageModal(imageSrc) {
            const modal = document.getElementById('imageModal');
            const modalImage = document.getElementById('modalImage');
            modalImage.src = imageSrc;
            modal.style.display = 'flex';
        }

        function closeImageModal() {
            const modal = document.getElementById('imageModal');
            modal.style.display = 'none';
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeImageModal();
            }
        });
    </script>
}

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Matching Dashboard Theme - Clean Automotive Design */
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --info-color: #17a2b8;
            --light-bg: #f8f9fa;
            --card-bg: #ffffff;
            --text-dark: #2c3e50;
            --text-muted: #7f8c8d;
            --border-color: #e1e8ed;
            --shadow: 0 2px 10px rgba(0,0,0,0.08);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.12);
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: var(--text-dark);
        }

        /* Page Header */
        .page-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
        }

        .header-icon {
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1.5rem;
            font-size: 1.5rem;
        }

        .page-header h1 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
        }

        .status-display {
            text-align: right;
            background: rgba(255,255,255,0.15);
            padding: 1rem 1.5rem;
            border-radius: 12px;
            backdrop-filter: blur(10px);
        }

        .status-label {
            display: block;
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 0.5rem;
        }

        /* Status Badges */
        .status-badge {
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-pending {
            background: #fff3cd;
            color: #856404;
        }

        .status-under-review {
            background: #cce5ff;
            color: #004085;
        }

        .status-approved {
            background: #d4edda;
            color: #155724;
        }

        .status-declined {
            background: #f8d7da;
            color: #721c24;
        }

        .status-scheduled {
            background: #ffeaa7;
            color: #856404;
        }

        /* Vehicle Cards */
        .vehicle-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
            height: 100%;
        }

        .vehicle-header {
            padding: 1.5rem;
            background: #f8f9fa;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }

        .customer-vehicle .vehicle-header {
            background: linear-gradient(135deg, var(--info-color), #138496);
            color: white;
        }

        .target-vehicle .vehicle-header {
            background: linear-gradient(135deg, var(--success-color), #1e7e34);
            color: white;
        }

        .header-content {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header-content i {
            font-size: 1.5rem;
        }

        .header-content h5 {
            margin: 0;
            font-size: 0.9rem;
            opacity: 0.9;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .header-content h3 {
            margin: 0.25rem 0 0 0;
            font-size: 1.4rem;
            font-weight: 700;
        }

        .estimated-value,
        .target-price {
            text-align: right;
            background: rgba(255,255,255,0.15);
            padding: 0.75rem 1rem;
            border-radius: 8px;
            backdrop-filter: blur(10px);
        }

        .value-label,
        .price-label {
            display: block;
            font-size: 0.8rem;
            opacity: 0.9;
            margin-bottom: 0.25rem;
        }

        .value-amount,
        .price-amount {
            display: block;
            font-size: 1.25rem;
            font-weight: 700;
        }

        .vehicle-body {
            padding: 1.5rem;
        }

        /* Specs Grid */
        .specs-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .spec-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            padding: 1rem;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid var(--accent-color);
        }

        .spec-item i {
            color: var(--accent-color);
            font-size: 1.1rem;
            width: 20px;
            text-align: center;
        }

        .spec-label {
            display: block;
            font-size: 0.8rem;
            color: var(--text-muted);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .spec-value {
            display: block;
            font-weight: 600;
            color: var(--text-dark);
            font-size: 0.95rem;
        }

        /* Condition Notes */
        .condition-notes {
            background: #fff8dc;
            border-left: 4px solid var(--warning-color);
            padding: 1rem;
            border-radius: 6px;
            margin-bottom: 2rem;
        }

        .condition-notes h6 {
            margin: 0 0 0.5rem 0;
            color: var(--text-dark);
            font-weight: 600;
        }

        .condition-notes p {
            margin: 0;
            color: var(--text-dark);
        }

        /* Vehicle Images */
        .vehicle-images h6 {
            margin-bottom: 1rem;
            color: var(--text-dark);
            font-weight: 600;
        }

        .image-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
        }

        .image-item {
            position: relative;
            overflow: hidden;
            border-radius: 8px;
            aspect-ratio: 4/3;
        }

        .vehicle-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .vehicle-image:hover {
            transform: scale(1.05);
        }

        .image-overlay {
            position: absolute;
            top: 0.5rem;
            right: 0.5rem;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .image-item:hover .image-overlay {
            opacity: 1;
        }

        /* Info Card */
        .info-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .info-header {
            background: #f8f9fa;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
        }

        .info-header h5 {
            margin: 0;
            font-weight: 600;
            color: var(--text-dark);
            display: flex;
            align-items: center;
        }

        .info-body {
            padding: 1.5rem;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .info-item i {
            color: var(--accent-color);
            font-size: 1.1rem;
            width: 20px;
            text-align: center;
        }

        .info-label {
            display: block;
            font-size: 0.8rem;
            color: var(--text-muted);
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .info-value {
            display: block;
            font-weight: 600;
            color: var(--text-dark);
            font-size: 0.95rem;
        }

        /* Admin Actions Card */
        .admin-actions-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .admin-header {
            background: linear-gradient(135deg, var(--warning-color), #e67e22);
            color: white;
            padding: 1.25rem 1.5rem;
        }

        .admin-header h5 {
            margin: 0;
            font-weight: 600;
            display: flex;
            align-items: center;
        }

        .admin-body {
            padding: 2rem;
        }

        .action-section {
            margin-bottom: 2rem;
        }

        .action-section:last-child {
            margin-bottom: 0;
        }

        .action-section h6 {
            margin-bottom: 1.25rem;
            color: var(--text-dark);
            font-weight: 600;
            display: flex;
            align-items: center;
            padding-bottom: 0.5rem;
            border-bottom: 2px solid #f1f3f4;
        }

        .divider {
            height: 1px;
            background: var(--border-color);
            margin: 2rem 0;
        }

        /* Form Styling */
        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
            font-size: 0.875rem;
            display: flex;
            align-items: center;
        }

        .form-control {
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            transition: all 0.2s ease;
            width: 100%;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        .form-actions {
            margin-top: 1.5rem;
        }

        /* Appointments Section */
        .appointments-list {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        .appointment-item {
            background: #f8f9fa;
            border-radius: 8px;
            padding: 1.25rem;
            border-left: 4px solid var(--accent-color);
        }

        .appointment-info {
            display: flex;
            align-items: center;
            gap: 2rem;
            margin-bottom: 0.5rem;
        }

        .appointment-date,
        .appointment-time {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-weight: 500;
        }

        .appointment-date i,
        .appointment-time i {
            color: var(--accent-color);
            font-size: 0.9rem;
        }

        .appointment-notes {
            display: flex;
            align-items: flex-start;
            gap: 0.5rem;
            margin-top: 0.75rem;
            font-size: 0.9rem;
            color: var(--text-muted);
        }

        .appointment-notes i {
            color: var(--text-muted);
            margin-top: 0.1rem;
        }

        /* Button Styling */
        .btn {
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            transition: all 0.2s ease;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-primary {
            background: var(--accent-color);
            color: white;
        }

        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background: #219a52;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-info {
            background: var(--info-color);
            color: white;
        }

        .btn-info:hover {
            background: #138496;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-outline-secondary {
            background: transparent;
            color: var(--text-muted);
            border: 2px solid var(--border-color);
        }

        .btn-outline-secondary:hover {
            background: var(--secondary-color);
            border-color: var(--secondary-color);
            color: white;
            text-decoration: none;
            transform: translateY(-2px);
        }

        .btn-light {
            background: rgba(255,255,255,0.9);
            color: var(--text-dark);
            border: 1px solid rgba(255,255,255,0.3);
        }

        .btn-light:hover {
            background: white;
            color: var(--text-dark);
            text-decoration: none;
        }

        .w-100 {
            width: 100% !important;
        }

        /* Navigation Actions */
        .navigation-actions {
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            padding-top: 2rem;
            border-top: 1px solid var(--border-color);
        }

        /* Image Modal */
        .image-modal {
            display: none;
            position: fixed;
            z-index: 10000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.9);
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            position: relative;
            max-width: 90%;
            max-height: 90%;
        }

        .modal-close {
            position: absolute;
            top: -40px;
            right: 0;
            color: white;
            font-size: 35px;
            font-weight: bold;
            cursor: pointer;
            transition: color 0.2s ease;
        }

        .modal-close:hover {
            color: #ccc;
        }

        #modalImage {
            max-width: 100%;
            max-height: 100%;
            border-radius: 8px;
            box-shadow: var(--shadow-hover);
        }

        /* Responsive Design */
        @@media (max-width: 768px) {
            .page-header {
                padding: 1.5rem;
                text-align: center;
            }

            .page-header .d-flex {
                flex-direction: column;
                align-items: center;
                gap: 1rem;
            }

            .header-icon {
                margin: 0 auto 1rem auto;
            }

            .status-display {
                text-align: center;
            }

            .vehicle-header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .estimated-value,
            .target-price {
                text-align: center;
            }

            .specs-grid {
                grid-template-columns: 1fr;
                gap: 0.75rem;
            }

            .image-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 0.75rem;
            }

            .info-item {
                flex-direction: column;
                align-items: flex-start;
                gap: 0.5rem;
            }

            .appointment-info {
                flex-direction: column;
                gap: 0.75rem;
                align-items: flex-start;
            }

            .navigation-actions {
                flex-direction: column;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }

            .admin-body {
                padding: 1.5rem;
            }

            .modal-close {
                top: -30px;
                font-size: 28px;
            }
        }

        @@media (max-width: 576px) {
            .page-header h1 {
                font-size: 1.5rem;
            }

            .header-content h3 {
                font-size: 1.2rem;
            }

            .image-grid {
                grid-template-columns: 1fr;
            }

            .vehicle-body,
            .info-body {
                padding: 1rem;
            }

            .form-group {
                margin-bottom: 1.25rem;
            }
        }

        /* Focus styles for accessibility */
        .btn:focus,
        .form-control:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
        }

        .vehicle-image:focus {
            outline: 3px solid var(--accent-color);
            outline-offset: 2px;
        }

        /* Animation for page load */
        .vehicle-card,
        .info-card,
        .admin-actions-card {
            animation: fadeInUp 0.6s ease-out;
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading states */
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn:disabled:hover {
            transform: none !important;
        }

        /* Print styles */
        @@media print {
            .admin-actions-card,
            .navigation-actions {
                display: none !important;
            }

            .page-header {
                background: none !important;
                color: var(--text-dark) !important;
            }

            .vehicle-header {
                background: none !important;
                color: var(--text-dark) !important;
            }

            body {
                background: white !important;
            }
        }
    </style>
}

@functions {
    public string GetStatusBadgeClass(string status)
    {
        switch (status)
        {
            case "Approved":
                return "bg-success";
            case "Declined":
                return "bg-danger";
            case "Scheduled":
                return "bg-warning";
            case "Under Review":
                return "bg-info";
            default:
                return "bg-secondary";
        }
    }
}