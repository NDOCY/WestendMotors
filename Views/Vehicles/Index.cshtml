@model IEnumerable<WestendMotors.Models.Vehicle>
@{
    ViewBag.Title = "Vehicles";
    Layout = "~/Views/Shared/_Layout_User.cshtml";
}

<div class="container-fluid mt-4">
    <!-- Page Header -->
    <div class="page-header mb-4">
        <div class="d-flex align-items-center">
            <div class="header-icon">
                <i class="fas fa-car"></i>
            </div>
            <div>
                <h1 class="mb-1">Vehicles Inventory</h1>
                <p class="text-muted mb-0">Manage your vehicle listings and inventory</p>
            </div>
        </div>
        <div class="header-actions">
            @Html.ActionLink("Add New Vehicle", "Create", null, new { @class = "btn btn-success" })
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="metric-card total-vehicles">
                <div class="metric-card-body">
                    <div class="metric-icon">
                        <i class="fas fa-car"></i>
                    </div>
                    <div class="metric-content">
                        <div class="metric-label">Total Vehicles</div>
                        <div class="metric-value">@Model.Count()</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="metric-card available-vehicles">
                <div class="metric-card-body">
                    <div class="metric-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="metric-content">
                        <div class="metric-label">Available</div>
                        <div class="metric-value">@Model.Count(v => v.Status == "Available")</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="metric-card sold-vehicles">
                <div class="metric-card-body">
                    <div class="metric-icon">
                        <i class="fas fa-handshake"></i>
                    </div>
                    <div class="metric-content">
                        <div class="metric-label">Sold</div>
                        <div class="metric-value">@Model.Count(v => v.Status == "Sold")</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="metric-card avg-price">
                <div class="metric-card-body">
                    <div class="metric-icon">
                        <i class="fas fa-dollar-sign"></i>
                    </div>
                    <div class="metric-content">
                        <div class="metric-label">Avg. Price</div>
                        <div class="metric-value">@(Model.Any() ? Model.Average(v => v.Price).ToString("C0") : "$0")</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters Section -->
    <div class="filters-card mb-4">
        <div class="card-header">
            <h6><i class="fas fa-filter me-2"></i>Filters & Search</h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-search me-2"></i>Search
                        </label>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search by make, model, or title..." />
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-flag me-2"></i>Status
                        </label>
                        <select id="statusFilter" class="form-control">
                            <option value="">All Status</option>
                            <option value="Available">Available</option>
                            <option value="Sold">Sold</option>
                            <option value="Reserved">Reserved</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label class="form-label">
                            <i class="fas fa-sort-amount-down me-2"></i>Sort By
                        </label>
                        <select id="sortFilter" class="form-control">
                            <option value="dateAdded">Date Added</option>
                            <option value="price">Price</option>
                            <option value="make">Make</option>
                            <option value="title">Title</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label class="form-label">&nbsp;</label>
                        <div class="form-control-plaintext">
                            <button type="button" class="btn btn-outline-secondary btn-sm" id="clearFilters">
                                <i class="fas fa-times me-1"></i>Clear
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Vehicles Table -->
    <div class="vehicles-table-card">
        <div class="card-header">
            <h6><i class="fas fa-list me-2"></i>Vehicles List</h6>
            <div class="table-actions">
                <button class="btn btn-outline-secondary btn-sm" id="viewToggle" data-view="table">
                    <i class="fas fa-th-large me-1"></i>Grid View
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <!-- Table View -->
            <div id="tableView" class="table-view">
                <div class="table-responsive">
                    <table class="vehicles-table">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>
                                    <i class="fas fa-industry me-1"></i>
                                    @Html.DisplayNameFor(model => model.Specs.Make)
                                </th>
                                <th>
                                    <i class="fas fa-tag me-1"></i>
                                    @Html.DisplayNameFor(model => model.Title)
                                </th>
                                <th>
                                    <i class="fas fa-align-left me-1"></i>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    <i class="fas fa-dollar-sign me-1"></i>
                                    @Html.DisplayNameFor(model => model.Price)
                                </th>
                                <th>
                                    <i class="fas fa-calendar-alt me-1"></i>
                                    @Html.DisplayNameFor(model => model.DateAdded)
                                </th>
                                <th>
                                    <i class="fas fa-flag me-1"></i>
                                    Status
                                </th>
                                <th>
                                    <i class="fas fa-cogs me-1"></i>
                                    Actions
                                </th>
                            </tr>
                        </thead>
                        <tbody id="vehiclesTableBody">
                            @foreach (var item in Model)
                            {
                                <tr data-make="@item.Specs.Make" data-title="@item.Title" data-status="@item.Status" data-price="@item.Price" data-date="@item.DateAdded.ToString("yyyy-MM-dd")">
                                    <td class="vehicle-image">
                                        @if (item.Images != null && item.Images.Any())
                                        {
                                            <img src="@Url.Content(item.Images.First().ImagePath)" class="table-vehicle-image" alt="@item.Title" />
                                        }
                                        else
                                        {
                                            <div class="no-image-placeholder">
                                                <i class="fas fa-image"></i>
                                            </div>
                                        }
                                    </td>
                                    <td class="vehicle-make">
                                        <span class="make-badge">@Html.DisplayFor(modelItem => item.Specs.Make)</span>
                                    </td>
                                    <td class="vehicle-title">
                                        <div class="title-content">
                                            <div class="title-main">@Html.DisplayFor(modelItem => item.Title)</div>
                                            <div class="title-specs">
                                                @item.Specs.Year • @item.Specs.Mileage.ToString("N0") km
                                            </div>
                                        </div>
                                    </td>
                                    <td class="vehicle-description">
                                        <div class="description-text">
                                            @(item.Description.Length > 100 ? item.Description.Substring(0, 100) + "..." : item.Description)
                                        </div>
                                    </td>
                                    <td class="vehicle-price">
                                        <div class="price-display">@Html.DisplayFor(modelItem => item.Price)</div>
                                    </td>
                                    <td class="vehicle-date">
                                        <div class="date-content">
                                            <div class="date-main">@item.DateAdded.ToString("MMM dd, yyyy")</div>
                                            <div class="date-time">@item.DateAdded.ToString("HH:mm")</div>
                                        </div>
                                    </td>
                                    <td class="vehicle-status">
                                        <span class="status-badge status-@(item.Status?.ToLower() ?? "unknown")">
                                            @(item.Status ?? "Unknown")
                                        </span>
                                    </td>
                                    <td class="vehicle-actions">
                                        <div class="action-buttons">
                                            <a href="@Url.Action("Details", new { id = item.Id })" class="btn-action btn-details" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a href="@Url.Action("Edit", new { id = item.Id })" class="btn-action btn-edit" title="Edit Vehicle">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("Delete", new { id = item.Id })" class="btn-action btn-delete" title="Delete Vehicle">
                                                <i class="fas fa-trash"></i>
                                            </a>

                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Grid View (Hidden by default) -->
            <div id="gridView" class="grid-view" style="display: none;">
                <div class="vehicles-grid" id="vehiclesGrid">
                    @foreach (var item in Model)
                    {
                        <div class="vehicle-card" data-make="@item.Specs.Make" data-title="@item.Title" data-status="@item.Status" data-price="@item.Price" data-date="@item.DateAdded.ToString("yyyy-MM-dd")">
                            <div class="vehicle-card-header">
                                @if (item.Images != null && item.Images.Any())
                                {
                                    <img src="@Url.Content(item.Images.First().ImagePath)" class="card-vehicle-image" alt="@item.Title" />
                                }
                                else
                                {
                                    <div class="card-no-image">
                                        <i class="fas fa-image"></i>
                                        <span>No Image</span>
                                    </div>
                                }
                                <div class="vehicle-overlay">
                                    <span class="status-badge status-@(item.Status?.ToLower() ?? "unknown")">
                                        @(item.Status ?? "Unknown")
                                    </span>
                                </div>
                            </div>
                            <div class="vehicle-card-body">
                                <div class="vehicle-make-badge">@item.Specs.Make</div>
                                <h6 class="vehicle-card-title">@item.Title</h6>
                                <div class="vehicle-specs">
                                    <span><i class="fas fa-calendar"></i> @item.Specs.Year</span>
                                    <span><i class="fas fa-tachometer-alt"></i> @item.Specs.Mileage.ToString("N0") km</span>
                                </div>
                                <div class="vehicle-price-large">@item.Price.ToString("C")</div>
                                <div class="vehicle-date-small">Added @item.DateAdded.ToString("MMM dd, yyyy")</div>
                            </div>
                            <div class="vehicle-card-actions">
                                <a href="@Url.Action("Details", new { id = item.Id })" class="btn-action btn-details" title="View Details">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Edit", new { id = item.Id })" class="btn-action btn-edit" title="Edit Vehicle">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Delete", new { id = item.Id })" class="btn-action btn-delete" title="Delete Vehicle">
                                    <i class="fas fa-trash"></i>
                                </a>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="empty-state">
            <div class="empty-icon">
                <i class="fas fa-car"></i>
            </div>
            <h5>No Vehicles Found</h5>
            <p>You haven't added any vehicles to your inventory yet.</p>
            @Html.ActionLink("Add Your First Vehicle", "Create", null, new { @class = "btn btn-success" })
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                filterVehicles();
            });

            // Filter functionality
            $('#statusFilter, #sortFilter').on('change', function() {
                filterVehicles();
            });

            // Clear filters
            $('#clearFilters').on('click', function() {
                $('#searchInput').val('');
                $('#statusFilter').val('');
                $('#sortFilter').val('dateAdded');
                filterVehicles();
            });

            // View toggle
            $('#viewToggle').on('click', function() {
                var currentView = $(this).data('view');
                if (currentView === 'table') {
                    $('#tableView').hide();
                    $('#gridView').show();
                    $(this).html('<i class="fas fa-list me-1"></i>Table View').data('view', 'grid');
                } else {
                    $('#gridView').hide();
                    $('#tableView').show();
                    $(this).html('<i class="fas fa-th-large me-1"></i>Grid View').data('view', 'table');
                }
            });

            function filterVehicles() {
                var searchTerm = $('#searchInput').val().toLowerCase();
                var statusFilter = $('#statusFilter').val().toLowerCase();
                var sortBy = $('#sortFilter').val();

                // Get all rows/cards
                var tableRows = $('#vehiclesTableBody tr');
                var gridCards = $('#vehiclesGrid .vehicle-card');

                // Filter function
                function filterItems(items) {
                    items.each(function() {
                        var $item = $(this);
                        var make = $item.data('make').toLowerCase();
                        var title = $item.data('title').toLowerCase();
                        var status = $item.data('status').toLowerCase();

                        var matchesSearch = searchTerm === '' ||
                                          make.includes(searchTerm) ||
                                          title.includes(searchTerm);

                        var matchesStatus = statusFilter === '' || status === statusFilter;

                        if (matchesSearch && matchesStatus) {
                            $item.show();
                        } else {
                            $item.hide();
                        }
                    });
                }

                // Apply filters
                filterItems(tableRows);
                filterItems(gridCards);

                // Sort function
                function sortItems(items, container) {
                    var sortedItems = items.sort(function(a, b) {
                        var aVal, bVal;

                        switch(sortBy) {
                            case 'price':
                                aVal = parseFloat($(a).data('price'));
                                bVal = parseFloat($(b).data('price'));
                                return bVal - aVal; // Descending
                            case 'make':
                                aVal = $(a).data('make').toLowerCase();
                                bVal = $(b).data('make').toLowerCase();
                                return aVal.localeCompare(bVal);
                            case 'title':
                                aVal = $(a).data('title').toLowerCase();
                                bVal = $(b).data('title').toLowerCase();
                                return aVal.localeCompare(bVal);
                            case 'dateAdded':
                            default:
                                aVal = new Date($(a).data('date'));
                                bVal = new Date($(b).data('date'));
                                return bVal - aVal; // Most recent first
                        }
                    });

                    container.append(sortedItems);
                }

                // Apply sorting
                sortItems(tableRows, $('#vehiclesTableBody'));
                sortItems(gridCards, $('#vehiclesGrid'));
            }

            // Tooltip initialization for action buttons
            $('.btn-action').tooltip();
        });
    </script>
}

@section Styles {
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        /* Matching Dashboard Theme - Clean Automotive Design */
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #3498db;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --light-bg: #f8f9fa;
            --card-bg: #ffffff;
            --text-dark: #2c3e50;
            --text-muted: #7f8c8d;
            --border-color: #e1e8ed;
            --shadow: 0 2px 10px rgba(0,0,0,0.08);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.12);
        }

        body {
            background-color: var(--light-bg);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: var(--text-dark);
        }

        /* Page Header */
        .page-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header-icon {
            background: rgba(255,255,255,0.2);
            border-radius: 12px;
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1.5rem;
            font-size: 1.5rem;
        }

        .page-header h1 {
            font-size: 2rem;
            font-weight: 700;
            margin: 0;
        }

        .header-actions .btn {
            background: rgba(255,255,255,0.2);
            border: 2px solid rgba(255,255,255,0.3);
            color: white;
            font-weight: 600;
        }

        .header-actions .btn:hover {
            background: rgba(255,255,255,0.3);
            border-color: rgba(255,255,255,0.5);
            color: white;
        }

        /* Metric Cards */
        .metric-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            transition: all 0.3s ease;
            overflow: hidden;
        }

        .metric-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
        }

        .metric-card-body {
            padding: 1.5rem;
            display: flex;
            align-items: center;
        }

        .metric-icon {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 1rem;
            font-size: 1.2rem;
            color: white;
        }

        .metric-content {
            flex: 1;
        }

        .metric-label {
            font-size: 0.85rem;
            color: var(--text-muted);
            margin-bottom: 0.25rem;
            text-transform: uppercase;
            font-weight: 600;
        }

        .metric-value {
            font-size: 1.8rem;
            font-weight: 700;
            color: var(--text-dark);
        }

        /* Color themes for metric cards */
        .total-vehicles .metric-icon { background: var(--accent-color); }
        .available-vehicles .metric-icon { background: var(--success-color); }
        .sold-vehicles .metric-icon { background: var(--warning-color); }
        .avg-price .metric-icon { background: var(--secondary-color); }

        /* Cards */
        .filters-card, .vehicles-table-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .card-header {
            background: #f8f9fa;
            padding: 1.25rem 1.5rem;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .card-header h6 {
            margin: 0;
            font-weight: 600;
            color: var(--text-dark);
            display: flex;
            align-items: center;
        }

        .card-body {
            padding: 1.5rem;
        }

        /* Form Styling */
        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: var(--text-dark);
            font-size: 0.875rem;
            display: flex;
            align-items: center;
        }

        .form-control {
            border: 2px solid var(--border-color);
            border-radius: 8px;
            padding: 0.75rem 1rem;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        /* Table Styling */
        .table-responsive {
            border-radius: 8px;
            overflow: hidden;
        }

        .vehicles-table {
            width: 100%;
            margin: 0;
            background: white;
        }

        .vehicles-table th {
            background: #f8f9fa;
            border: none;
            padding: 1rem 1.25rem;
            font-weight: 600;
            color: var(--text-dark);
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            white-space: nowrap;
        }

        .vehicles-table td {
            padding: 1rem 1.25rem;
            border: none;
            border-bottom: 1px solid #f1f3f4;
            vertical-align: middle;
        }

        .vehicles-table tbody tr {
            transition: background-color 0.2s ease;
        }

        .vehicles-table tbody tr:hover {
            background-color: #f8f9fa;
        }

        /* Table Cell Styling */
        .table-vehicle-image {
            width: 60px;
            height: 45px;
            object-fit: cover;
            border-radius: 6px;
        }

        .no-image-placeholder {
            width: 60px;
            height: 45px;
            background: #f8f9fa;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-muted);
            font-size: 0.8rem;
        }

        .make-badge {
            background: var(--accent-color);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.8rem;
            font-weight: 600;
        }

        .title-content .title-main {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.25rem;
        }

        .title-content .title-specs {
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        .description-text {
            max-width: 200px;
            line-height: 1.4;
            font-size: 0.9rem;
            color: var(--text-muted);
        }

        .price-display {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--success-color);
        }

        .date-content .date-main {
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.1rem;
        }

        .date-content .date-time {
            font-size: 0.8rem;
            color: var(--text-muted);
        }

        /* Status Badges */
        .status-badge {
            padding: 0.3rem 0.75rem;
            border-radius: 15px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .status-available {
            background: rgba(39, 174, 96, 0.1);
            color: var(--success-color);
            border: 1px solid var(--success-color);
        }

        .status-sold {
            background: rgba(231, 76, 60, 0.1);
            color: var(--danger-color);
            border: 1px solid var(--danger-color);
        }

        .status-reserved {
            background: rgba(243, 156, 18, 0.1);
            color: var(--warning-color);
            border: 1px solid var(--warning-color);
        }

        .status-unknown {
            background: rgba(127, 140, 141, 0.1);
            color: var(--text-muted);
            border: 1px solid var(--text-muted);
        }

        /* Action Buttons */
        .action-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .btn-action {
            width: 32px;
            height: 32px;
            border-radius: 6px;
            display: flex;
            align-items: center;
            justify-content: center;
            text-decoration: none;
            transition: all 0.2s ease;
            font-size: 0.9rem;
        }

        .btn-details {
            background: var(--accent-color);
            color: white;
        }

        .btn-details:hover {
            background: #2980b9;
            color: white;
            transform: scale(1.1);
        }

        .btn-details::before {
            content: '\f06e';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
        }

        .btn-edit {
            background: var(--warning-color);
            color: white;
        }

        .btn-edit:hover {
            background: #e67e22;
            color: white;
            transform: scale(1.1);
        }

        .btn-edit::before {
            content: '\f044';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
        }

        .btn-delete {
            background: var(--danger-color);
            color: white;
        }

        .btn-delete:hover {
            background: #c0392b;
            color: white;
            transform: scale(1.1);
        }

        .btn-delete::before {
            content: '\f1f8';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
        }

        /* Grid View Styling */
        .vehicles-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 1.5rem;
            padding: 1.5rem;
        }

        .vehicle-card {
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: var(--shadow-hover);
        }

        .vehicle-card-header {
            position: relative;
            height: 200px;
            overflow: hidden;
        }

        .card-vehicle-image {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .card-no-image {
            width: 100%;
            height: 100%;
            background: #f8f9fa;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: var(--text-muted);
        }

        .card-no-image i {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }

        .vehicle-overlay {
            position: absolute;
            top: 1rem;
            right: 1rem;
        }

        .vehicle-card-body {
            padding: 1.25rem;
        }

        .vehicle-make-badge {
            background: var(--accent-color);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 15px;
            font-size: 0.75rem;
            font-weight: 600;
            display: inline-block;
            margin-bottom: 0.75rem;
        }

        .vehicle-card-title {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 0.75rem;
            line-height: 1.3;
        }

        .vehicle-specs {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
            font-size: 0.85rem;
            color: var(--text-muted);
        }

        .vehicle-specs span {
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .vehicle-price-large {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--success-color);
            margin-bottom: 0.5rem;
        }

        .vehicle-date-small {
            font-size: 0.8rem;
            color: var(--text-muted);
            margin-bottom: 1rem;
        }

        .vehicle-card-actions {
            display: flex;
            gap: 0.5rem;
            padding-top: 1rem;
            border-top: 1px solid #f1f3f4;
        }

        .vehicle-card-actions .btn {
            flex: 1;
            font-size: 0.8rem;
            padding: 0.5rem;
        }

        /* Button Styling */
        .btn {
            font-weight: 600;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            transition: all 0.2s ease;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-success {
            background: var(--success-color);
            color: white;
        }

        .btn-success:hover {
            background: #219a52;
            transform: translateY(-2px);
            box-shadow: var(--shadow-hover);
            color: white;
            text-decoration: none;
        }

        .btn-outline-primary {
            background: transparent;
            color: var(--accent-color);
            border: 2px solid var(--accent-color);
        }

        .btn-outline-primary:hover {
            background: var(--accent-color);
            color: white;
            text-decoration: none;
        }

        .btn-outline-secondary {
            background: transparent;
            color: var(--text-muted);
            border: 2px solid var(--border-color);
        }

        .btn-outline-secondary:hover {
            background: var(--secondary-color);
            border-color: var(--secondary-color);
            color: white;
            text-decoration: none;
        }

        .btn-outline-danger {
            background: transparent;
            color: var(--danger-color);
            border: 2px solid var(--danger-color);
        }

        .btn-outline-danger:hover {
            background: var(--danger-color);
            color: white;
            text-decoration: none;
        }

        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
        }

        /* Table Actions */
        .table-actions .btn {
            padding: 0.5rem 1rem;
            font-size: 0.8rem;
        }

        /* Empty State */
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            background: var(--card-bg);
            border-radius: 12px;
            box-shadow: var(--shadow);
        }

        .empty-icon {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            background: var(--light-bg);
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            font-size: 2rem;
            color: var(--text-muted);
        }

        .empty-state h5 {
            color: var(--text-dark);
            margin-bottom: 1rem;
        }

        .empty-state p {
            color: var(--text-muted);
            margin-bottom: 2rem;
        }

        /* Responsive Design */
        @@media (max-width: 1200px) {
            .vehicles-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 1.25rem;
            }
        }

        @@media (max-width: 768px) {
            .page-header {
                padding: 1.5rem;
                flex-direction: column;
                align-items: flex-start;
                gap: 1rem;
            }

            .page-header .d-flex {
                width: 100%;
            }

            .header-actions {
                width: 100%;
            }

            .header-actions .btn {
                width: 100%;
            }

            .vehicles-table th,
            .vehicles-table td {
                padding: 0.75rem 0.5rem;
                font-size: 0.8rem;
            }

            .make-badge {
                font-size: 0.7rem;
                padding: 0.2rem 0.5rem;
            }

            .description-text {
                max-width: 150px;
                font-size: 0.8rem;
            }

            .action-buttons {
                flex-direction: column;
                gap: 0.25rem;
            }

            .btn-action {
                width: 28px;
                height: 28px;
                font-size: 0.8rem;
            }

            .vehicles-grid {
                grid-template-columns: 1fr;
                padding: 1rem;
                gap: 1rem;
            }

            .vehicle-card-actions {
                flex-direction: column;
            }

            .card-body {
                padding: 1.25rem;
            }
        }

        @@media (max-width: 576px) {
            .page-header {
                padding: 1.25rem;
            }

            .page-header h1 {
                font-size: 1.5rem;
            }

            .header-icon {
                width: 50px;
                height: 50px;
                font-size: 1.25rem;
            }

            .metric-card-body {
                padding: 1.25rem;
            }

            .metric-value {
                font-size: 1.5rem;
            }

            .vehicles-table {
                font-size: 0.75rem;
            }

            .table-vehicle-image {
                width: 45px;
                height: 35px;
            }

            .no-image-placeholder {
                width: 45px;
                height: 35px;
            }
        }

        /* Focus styles for accessibility */
        .btn:focus,
        .form-control:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.25);
        }

        /* Animation for page load */
        .metric-card, .filters-card, .vehicles-table-card, .vehicle-card {
            animation: fadeInUp 0.6s ease-out;
        }

        @@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Loading states */
        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none !important;
        }

        .btn:disabled:hover {
            transform: none !important;
        }

        /* Utility classes */
        .me-1 { margin-right: 0.25rem; }
        .me-2 { margin-right: 0.5rem; }
        .mb-3 { margin-bottom: 1rem; }
        .mb-4 { margin-bottom: 1.5rem; }
        .text-muted { color: var(--text-muted) !important; }
        .d-flex { display: flex; }
        .p-0 { padding: 0; }

        /* Hide/Show elements */
        [style*="display: none"] {
            display: none !important;
        }

        /* Tooltip styling */
        .tooltip {
            font-size: 0.75rem;
        }

        .tooltip-inner {
            background: var(--text-dark);
            border-radius: 6px;
            padding: 0.5rem 0.75rem;
        }

        /* Custom scrollbar for table */
        .table-responsive::-webkit-scrollbar {
            height: 6px;
        }

        .table-responsive::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 3px;
        }

        .table-responsive::-webkit-scrollbar-thumb {
            background: var(--accent-color);
            border-radius: 3px;
        }

        .table-responsive::-webkit-scrollbar-thumb:hover {
            background: #2980b9;
        }
    </style>
}