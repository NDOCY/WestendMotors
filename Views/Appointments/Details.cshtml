@model WestendMotors.Models.Appointment
@{
    ViewBag.Title = "Details";
    var role = Session["Role"] as string;
    var userId = Session["UserId"] != null ? Convert.ToInt32(Session["UserId"]) : 0;

    if (role == "Admin")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
    else
    {
        Layout = "~/Views/Shared/_Layout_User.cshtml";
    }
}

<h2>Appointment Details</h2>

<div>
    <strong>Vehicle:</strong> @Model.Vehicle?.Title <br />
    <strong>Customer:</strong> @Model.Customer?.FullName <br />
    <strong>Appointment Date:</strong> @Model.AppointmentDate.ToString("f") <br />
    <strong>Type:</strong> @Model.AppointmentType <br />
    <strong>Status:</strong> @Model.Status <br />

    @if (!string.IsNullOrEmpty(Model.Notes))
    {
        <strong>Customer Notes:</strong> @Model.Notes <br />
    }

    @if (!string.IsNullOrEmpty(Model.AdminNotes))
    {
        <strong>Admin Notes:</strong> @Model.AdminNotes <br />
    }

    @if (Model.RescheduledDate.HasValue)
    {
        <strong>Rescheduled Date:</strong> @Model.RescheduledDate.Value.ToString("f") <br />
    }
</div>

<hr />

@if (role == "Admin")
{
    <h4>Update Status</h4>
    using (Html.BeginForm("UpdateStatus", "Appointments", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("id", Model.AppointmentId)

        <div class="form-group">
            <label for="status">Status:</label>
            @Html.DropDownList("status", new SelectList(
                new[] { "Pending", "Confirmed", "Completed", "Cancelled", "Postponed" },
                Model.Status
            ), new { @class = "form-control", id = "statusDropdown" })
        </div>

        <div class="form-group">
            <label for="adminNotes">Admin Notes (required for status changes):</label>
            <textarea name="adminNotes" class="form-control" rows="3" required>@Model.AdminNotes</textarea>
        </div>

        <div id="rescheduleSection" class="form-group" style="display:none;">
            <label for="rescheduledDate">Rescheduled Date:</label>
            <input type="datetime-local" name="rescheduledDate" class="form-control"
                   value="@(Model.RescheduledDate?.ToString("yyyy-MM-ddTHH:mm"))" />
        </div>

        <button type="submit" class="btn btn-primary">Save Status</button>
    }

    <script>
        document.getElementById('statusDropdown').addEventListener('change', function() {
            var rescheduleSection = document.getElementById('rescheduleSection');
            rescheduleSection.style.display = this.value === 'Postponed' ? 'block' : 'none';
        });

        // Trigger on page load in case status is already "Postponed"
        document.addEventListener('DOMContentLoaded', function() {
            var statusDropdown = document.getElementById('statusDropdown');
            var rescheduleSection = document.getElementById('rescheduleSection');
            rescheduleSection.style.display = statusDropdown.value === 'Postponed' ? 'block' : 'none';
        });
    </script>
}
else if (role == "Customer" && Model.UserId == userId && Model.Status == "Pending")
{
    <h4>Reschedule Appointment</h4>
    using (Html.BeginForm("Reschedule", "Appointments", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.Hidden("id", Model.AppointmentId)

        <div class="form-group">
            <label for="newDate">New Appointment Date:</label>
            <input type="datetime-local" name="newDate" class="form-control"
                   value="@Model.AppointmentDate.ToString("yyyy-MM-ddTHH:mm")"
                   min="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" required />
        </div>

        <div class="form-group">
            <label for="rescheduleNotes">Reason for rescheduling:</label>
            <textarea name="rescheduleNotes" class="form-control" rows="3" required></textarea>
        </div>

        <button type="submit" class="btn btn-warning">Request Reschedule</button>
    }
}